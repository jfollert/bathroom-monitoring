AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Description: Bathroom monitoring

Parameters:
  StageName:
    Type: String
    Default: dev
  
  EventBusName:
    Type: String
    Default: default


Globals:
  Function:
    Environment:
      Variables:
        STAGE: !Ref StageName

Resources:
  ### API REST
  ResourcesApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub ResourcesApi-${AWS::StackName}
      StageName: !Ref StageName
      Cors:
        AllowMethods: "'*'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"

  ### Lambdas
  UpdateBathroomFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Runtime: nodejs14.x
      CodeUri: dist/src/apps/backend/lambdas/bathrooms/Update
      Handler: UpdateBathroom.handler
      Layers:
        - !Ref SharedLayer
        - !Ref BathroomsLayer
      Environment:
        Variables:
          TABLE_NAME: !Ref BathroomsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BathroomsTable
      Events:
        PutExam:
          Type: Api
          Properties:
            RestApiId: !Ref ResourcesApi
            Path: /bathrooms/{bathroomId}
            Method: PUT
  
  FindBathroomFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Runtime: nodejs14.x
      CodeUri: dist/src/apps/backend/lambdas/bathrooms/Find
      Handler: FindBathroom.handler
      Layers:
        - !Ref SharedLayer
        - !Ref BathroomsLayer
      Environment:
        Variables:
          TABLE_NAME: !Ref BathroomsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BathroomsTable
      Events:
        PutExam:
          Type: Api
          Properties:
            RestApiId: !Ref ResourcesApi
            Path: /bathrooms
            Method: GET
  
  RemoveBathroomFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Runtime: nodejs14.x
      CodeUri: dist/src/apps/backend/lambdas/bathrooms/Remove
      Handler: RemoveBathroom.handler
      Layers:
        - !Ref SharedLayer
        - !Ref BathroomsLayer
      Environment:
        Variables:
          TABLE_NAME: !Ref BathroomsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BathroomsTable
      Events:
        PutExam:
          Type: Api
          Properties:
            RestApiId: !Ref ResourcesApi
            Path: /bathrooms/{bathroomId}
            Method: DELETE
  
  UpdateBathroomDispenserFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Runtime: nodejs14.x
      CodeUri: dist/src/apps/backend/lambdas/bathrooms/UpdateDispenser
      Handler: UpdateBathroomDispenser.handler
      Layers:
        - !Ref SharedLayer
        - !Ref BathroomsLayer
      Environment:
        Variables:
          TABLE_NAME: !Ref BathroomsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BathroomsTable
      Events:
        PutExam:
          Type: Api
          Properties:
            RestApiId: !Ref ResourcesApi
            Path: /bathrooms/{bathroomId}/dispensers/{dispenserId}
            Method: PUT

  EvaluateSensorRecordFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Runtime: nodejs14.x
      CodeUri: dist/src/apps/backend/lambdas/bathrooms/EvaluateRecord
      Handler: EvaluateRecord.handler
      Layers:
        - !Ref SharedLayer
        - !Ref BathroomsLayer
      Environment:
        Variables:
          TABLE_NAME: !Ref BathroomsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BathroomsTable
      Events:
        RecordAggregated:
          Type: EventBridgeRule
          Properties:
            Pattern:
              source:
                - bath-mon.sensors.1.event.sensor-record.aggregated
              detail-type:
                - !Ref StageName
              detail:
                type: 
                  - bath-mon.sensors.1.event.sensor-record.aggregated


  # Sensors
  UpdateSensorFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Runtime: nodejs14.x
      CodeUri: dist/src/apps/backend/lambdas/sensors/Update
      Handler: UpdateSensor.handler
      Layers:
        - !Ref SharedLayer
        - !Ref SensorsLayer
      Environment:
        Variables:
          TABLE_NAME: !Ref SensorsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SensorsTable
      Events:
        PutExam:
          Type: Api
          Properties:
            RestApiId: !Ref ResourcesApi
            Path: /sensors/{sensorId}
            Method: PUT
  
  FindSensorsFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Runtime: nodejs14.x
      CodeUri: dist/src/apps/backend/lambdas/sensors/Find
      Handler: FindSensors.handler
      Layers:
        - !Ref SharedLayer
        - !Ref SensorsLayer
      Environment:
        Variables:
          TABLE_NAME: !Ref SensorsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SensorsTable
      Events:
        PutExam:
          Type: Api
          Properties:
            RestApiId: !Ref ResourcesApi
            Path: /sensors
            Method: GET
  
  RemoveSensorFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Runtime: nodejs14.x
      CodeUri: dist/src/apps/backend/lambdas/sensors/Remove
      Handler: RemoveSensor.handler
      Layers:
        - !Ref SharedLayer
        - !Ref SensorsLayer
      Environment:
        Variables:
          TABLE_NAME: !Ref SensorsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SensorsTable
      Events:
        PutExam:
          Type: Api
          Properties:
            RestApiId: !Ref ResourcesApi
            Path: /sensors/{sensorId}
            Method: DELETE

  AggregateRecordSensorFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Runtime: nodejs14.x
      CodeUri: dist/src/apps/backend/lambdas/sensors/Aggregate
      Handler: AggregateRecordSensor.handler
      Layers:
        - !Ref SharedLayer
        - !Ref SensorsLayer
      Environment:
        Variables:
          TABLE_NAME: !Ref SensorsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SensorsTable
        - EventBridgePutEventsPolicy:
            EventBusName: !Ref EventBusName
      Events:
        PutExam:
          Type: Api
          Properties:
            RestApiId: !Ref ResourcesApi
            Path: /sensors/{sensorId}/records/{recordId}
            Method: PUT
  

  ### DynamoDB
  BathroomsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-bathrooms
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH 
        - AttributeName: SK
          KeyType: RANGE 
      BillingMode: PAY_PER_REQUEST
  
  SensorsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-sensors
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH 
        - AttributeName: SK
          KeyType: RANGE 
      BillingMode: PAY_PER_REQUEST
  
  ### Layer
  SharedLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub ${AWS::StackName}-shared-module
      Description: Shared library
      ContentUri: ./dist/layers/shared
      CompatibleRuntimes:
        - nodejs14.x
      LicenseInfo: "MIT"
      RetentionPolicy: Delete

  BathroomsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub ${AWS::StackName}-bathrooms-module
      Description: Bathrooms library
      ContentUri: ./dist/layers/bathrooms
      CompatibleRuntimes:
        - nodejs14.x
      LicenseInfo: "MIT"
      RetentionPolicy: Delete
  
  SensorsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub ${AWS::StackName}-sensors-module
      Description: Sensors library
      ContentUri: ./dist/layers/sensors
      CompatibleRuntimes:
        - nodejs14.x
      LicenseInfo: "MIT"
      RetentionPolicy: Delete

Outputs:
  StageName:
    Description: "Stage"
    Value: !Ref StageName

  APIURL:
    Value: !Sub https://${ResourcesApi}.execute-api.${AWS::Region}.amazonaws.com/${StageName}


